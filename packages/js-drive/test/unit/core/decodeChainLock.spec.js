const decodeChainLock = require('../../../lib/core/decodeChainLock');

describe('decodeChainLock', () => {
  let chaiLockBuffer;

  beforeEach(() => {
    chaiLockBuffer = Buffer.from('08ea07122036252dfdf79b1b8a95141d32a4c66353a88e439506f036867d7949a5ca7d8a371a60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', 'hex');
  });

  it('should decode chainLock', async () => {
    const decodedChainLock = decodeChainLock(chaiLockBuffer);

    expect(decodedChainLock).to.deep.equal({
      height: 1002,
      blockHash: Buffer.from('36252dfdf79b1b8a95141d32a4c66353a88e439506f036867d7949a5ca7d8a37', 'hex'),
      signature: Buffer.from('000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', 'hex'),
    });
  });
});
